var xoctGroupParticipant = { selected_id: 0, data_url: "", container_available: null, container_per_group: null, lng: [delete_participant = "Delete Participant?", select_group = "Select Group", none_available = "No Participants in this Group", none_available_all = "No Participants available"], filter_container: null, filtering: !1, before_load: function () { }, after_load: function () { }, lngFromJson: function (a) { this.lng = JSON.parse(a) }, init: function (a, b, c, d, e) { "undefined" != typeof d && (this.before_load = d), "undefined" != typeof e && (this.after_load = e), this.data_url = a, $(b).html("<ul id=\"xoct_available_participant\" class=\"list-group\"></ul>"), $(c).html("<ul id=\"xoct_group_participant\" class=\"list-group\"></ul>"), this.container_available = $("#xoct_available_participant"), this.container_per_group = $("#xoct_group_participant"), this.filter_container = $("#xoct_participant_filter"), this.load(); var f = this; $(document).on("click", ".xoct_add_user", function () { var a = $(this).parent().data("user-id"); f.addUser(a) }), $(document).on("click", ".xoct_remove_user", function () { var a = $(this).parent().data("id"); f.removeUser(a) }), $.expr[":"].contains = function (b, a, c) { return 0 <= $(b).text().toUpperCase().indexOf(c[3].toUpperCase()) }, this.filter_container.keyup(function () { f.filter($(this).val()), f.filtering && !$("#xoct_filter").length ? f.filter_container.after("<span class=\"input-group-btn\"><button class=\"btn btn-default\" id=\"xoct_filter\" type=\"button\"><span class=\"glyphicon glyphicon-remove\"></span> </button></span>") : !f.filtering && $("#xoct_filter").remove() }), $(document).on("click", "#xoct_filter", function () { f.filter_container.val(""), f.filter(""), $(this).remove() }) }, removeUser: function (a) { if (confirm(this.lng.delete_participant)) { this.before_load(); var b = this, c = this.data_url; $.ajax({ url: c + "&cmd=delete", type: "POST", data: { id: a, group_id: xoctGroup.selected_id } }).done(function () { xoctGroup.removeParticipant(a), b.after_load(), console.log("load"), b.load(), b.loadForGroupId() }) } }, addUser: function (a) { var b = xoctGroup.selected_id; if (0 == b) return void alert(this.lng.select_group); this.before_load(); var c = this, d = this.data_url; $.ajax({ url: d + "&cmd=create", type: "POST", data: { user_id: a, group_id: xoctGroup.selected_id } }).done(function () { xoctGroup.addParticipant(a), c.after_load(), c.load(), c.loadForGroupId(b) }) }, clear: function () { this.container_per_group.empty(), this.container_per_group.html("<li class=\"list-group-item\">" + this.lng.select_group + "</li>") }, load: function () { var a = this; this.before_load(), a.container_available.empty(); var b = xoctGroup.getAvailableParticipantsForSelectedGroup(); b.forEach(function (b) { var c = ""; xoctGroup.isInAnyGroup(b.user_id) && (c = "<img class=\"xoct_checkmark\" width=\"10px\" height=\"10px\" src=\"./Customizing/global/plugins/Services/Repository/RepositoryObject/OpencastObject/templates/images/checkmark.svg\">"), a.container_available.append("<li class=\"list-group-item xoct_participant_available\" data-user-id=\"" + b.user_id + "\">" + c + "<div style=\"margin-right:30px;\">" + b.name + "</div><button class=\"btn btn-primary xoct_add_user pull-right\"><span class=\"glyphicon glyphicon-plus\"></span></button></li>") }), b && 0 != b.length || a.container_available.html("<li class=\"list-group-item\">" + a.lng.none_available_all + "</li>"), a.filter($(a.filter_container).val()), a.after_load() }, loadForGroupId: function () { var a = this; this.before_load(), a.container_per_group.empty(); var b = xoctGroup.getSelectedGroupParticipants(); b.forEach(function (b) { a.container_per_group.append("<li class=\"list-group-item\" data-id=\"" + b.user_id + "\"><div style=\"margin-right:30px;\">" + b.name + "</div><button class=\"btn btn-default xoct_remove_user pull-right xoct_admin_only\"><span class=\"glyphicon glyphicon-minus\"></span></button></li>") }), b && 0 != b.length || a.container_per_group.html("<li class=\"list-group-item\">" + a.lng.none_available + "</li>"), a.after_load(), xoctGroup.is_admin || $(".xoct_admin_only").hide() }, filter: function (a) { this.filtering = "" != a, $(".xoct_participant_available:not(:contains(\"" + a + "\"))").hide(), $(".xoct_participant_available:contains(\"" + a + "\")").show() } };
